<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lift | Dimitar Kostov ramblings]]></title>
  <link href="http://mytrile.github.com/blog/categories/lift/atom.xml" rel="self"/>
  <link href="http://mytrile.github.com/"/>
  <updated>2013-04-07T19:52:16+03:00</updated>
  <id>http://mytrile.github.com/</id>
  <author>
    <name><![CDATA[Dimitar Kostov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Designer Friendly Templates in Lift]]></title>
    <link href="http://mytrile.github.com/blog/2011/01/21/designer-friendly-templates-in-lift/"/>
    <updated>2011-01-21T00:00:00+02:00</updated>
    <id>http://mytrile.github.com/blog/2011/01/21/designer-friendly-templates-in-lift</id>
    <content type="html"><![CDATA[<p>Today I've read <a title="Lift" target="_blank" href="http://seventhings.liftweb.net/index">an article</a> about 7 reasons why "Lift is the most powerful, most secure web framework available today". One of the reasons got my attention - <a title="Designer friendly templates" target="_blank" href="http://seventhings.liftweb.net/templates">Designer Friendly Templates</a>. First thing in my mind was - What does "designer friendly template" has to do with security and power of web framework ? The second thought was after reading the argument for the previous statement:</p>


<p>&#13;</p>

<blockquote>&#13;
<p>The designers do not have to learn any tag libraries or any other language.</p>&#13;
</blockquote>


<p>&#13;</p>

<p>Ok, so it's easy to learn css class names rather then take 15 minutes to learn template engine like haml or mustache ? Really ?Â </p>


<p>&#13;</p>

<p>I've looked over Scala/Lift and I think it's pretty neat combination, but these guys need to learn how to promote their product. Every time I read/hear something from Lifts camp it's always the same : "Secure, powerfull" and still I don't really understand why it's better than Django/Rails for example.</p>


<p></p>
]]></content>
  </entry>
  
</feed>
